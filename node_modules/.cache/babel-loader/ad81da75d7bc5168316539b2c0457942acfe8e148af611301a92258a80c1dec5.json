{"ast":null,"code":"var _jsxFileName = \"/home/alistairjss90/personal/halfelfalistair.github.io/src/components/Nav.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { HamburgerIcon } from './svgs/HamburgerIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Nav = ({\n  screenWidth\n}) => {\n  _s();\n  const navHeadings = [\"About\", \"Knowledge\", \"Projects\", \"Contact\"];\n\n  // const [hamburgerPresent, setHamburgerPresent] = useState(false)\n  const [hamburgerPresent, setHamburgerPresent] = useState(screenWidth < 400 ? true : false);\n\n  // const [hamburgerMenuOpen, sethamburgerMenuOpen] = useState(false)\n  const [hamburgerMenuOpen, sethamburgerMenuOpen] = useState(false);\n\n  // const handleScreenWidth = () => {\n  //     // Accounts for screen size changes while in use, including closing vertical burger menu after breakpoint\n  //     // setHamburgerPresent(window.outerWidth < 400 ? true : false)\n  //     setHamburgerPresent(screenWidth < 400 ? true : false)\n  //     if (screenWidth >= 400) {\n  //         sethamburgerMenuOpen(false)\n  //     }\n  // }\n\n  const toggleHamburgerMenu = () => {\n    // Toggles vertical burger nav list\n    sethamburgerMenuOpen(hamburgerMenuOpen ? false : true);\n  };\n\n  // useEffect(() => {\n  //     window.addEventListener(\"resize\", handleScreenWidth)\n  // })\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    id: \"menu\",\n    className: `${hamburgerPresent ? 'hamburgerPresent' : ''} ${hamburgerMenuOpen ? 'navbarExtend' : ''}`,\n    children: [hamburgerPresent ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hamburgerContainer\",\n      children: /*#__PURE__*/_jsxDEV(HamburgerIcon, {\n        toggleHamburgerMenu: toggleHamburgerMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"horizontalNavLinks\",\n      children: navHeadings.map((navHeading, i) => {\n        const navRef = `#${navHeading.toLowerCase()}`;\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: navRef,\n          className: \"horizontalNavLink\",\n          children: navHeading\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), hamburgerMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"verticalNavLinks\",\n      children: navHeadings.map((navHeading, i) => {\n        const navRef = `#${navHeading.toLowerCase()}`;\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: navRef,\n          className: \"verticalNavLink\",\n          children: navHeading\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Nav, \"GvOZCPM0ZAhSIO3qyQiSkTyQPNg=\");\n_c = Nav;\nvar _c;\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"names":["React","useState","useEffect","HamburgerIcon","jsxDEV","_jsxDEV","Nav","screenWidth","_s","navHeadings","hamburgerPresent","setHamburgerPresent","hamburgerMenuOpen","sethamburgerMenuOpen","toggleHamburgerMenu","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","navHeading","i","navRef","toLowerCase","href","_c","$RefreshReg$"],"sources":["/home/alistairjss90/personal/halfelfalistair.github.io/src/components/Nav.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { HamburgerIcon } from './svgs/HamburgerIcon';\n\nexport const Nav = ({screenWidth}) => {\n    const navHeadings = [\"About\", \"Knowledge\", \"Projects\", \"Contact\"];\n\n    // const [hamburgerPresent, setHamburgerPresent] = useState(false)\n    const [hamburgerPresent, setHamburgerPresent] = useState(screenWidth < 400 ? true : false)\n\n    // const [hamburgerMenuOpen, sethamburgerMenuOpen] = useState(false)\n    const [hamburgerMenuOpen, sethamburgerMenuOpen] = useState(false)\n\n\n    // const handleScreenWidth = () => {\n    //     // Accounts for screen size changes while in use, including closing vertical burger menu after breakpoint\n    //     // setHamburgerPresent(window.outerWidth < 400 ? true : false)\n    //     setHamburgerPresent(screenWidth < 400 ? true : false)\n    //     if (screenWidth >= 400) {\n    //         sethamburgerMenuOpen(false)\n    //     }\n    // }\n\n    const toggleHamburgerMenu = () => {\n        // Toggles vertical burger nav list\n        sethamburgerMenuOpen(hamburgerMenuOpen ? false : true)\n    }\n\n    // useEffect(() => {\n    //     window.addEventListener(\"resize\", handleScreenWidth)\n    // })\n\n    return (\n        <nav id=\"menu\" className={`${hamburgerPresent ? 'hamburgerPresent' : ''} ${hamburgerMenuOpen ? 'navbarExtend' : ''}`}>\n            {hamburgerPresent ? (\n                <div className='hamburgerContainer'>\n                    <HamburgerIcon toggleHamburgerMenu={toggleHamburgerMenu} />\n                </div>\n                \n            ) : (\n                <div className='horizontalNavLinks'>\n                    {navHeadings.map((navHeading, i) => {\n                        const navRef = `#${navHeading.toLowerCase()}`\n                        return <a key={i} href={navRef} className='horizontalNavLink'>{navHeading}</a>\n                    })}\n                </div>\n            )}\n\n            {hamburgerMenuOpen && (\n                <div className='verticalNavLinks'>\n                    {navHeadings.map((navHeading, i) => {\n                        const navRef = `#${navHeading.toLowerCase()}`\n                        return <a key={i} href={navRef} className='verticalNavLink'>{navHeading}</a>\n                    })}\n                </div>\n            )}\n        </nav>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,OAAO,MAAMC,GAAG,GAAGA,CAAC;EAACC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAMC,WAAW,GAAG,CAAC,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,SAAS,CAAC;;EAEjE;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAACM,WAAW,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,CAAC;;EAE1F;EACA,MAAM,CAACK,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;;EAGjE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMa,mBAAmB,GAAGA,CAAA,KAAM;IAC9B;IACAD,oBAAoB,CAACD,iBAAiB,GAAG,KAAK,GAAG,IAAI,CAAC;EAC1D,CAAC;;EAED;EACA;EACA;;EAEA,oBACIP,OAAA;IAAKU,EAAE,EAAC,MAAM;IAACC,SAAS,EAAE,GAAGN,gBAAgB,GAAG,kBAAkB,GAAG,EAAE,IAAIE,iBAAiB,GAAG,cAAc,GAAG,EAAE,EAAG;IAAAK,QAAA,GAChHP,gBAAgB,gBACbL,OAAA;MAAKW,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eAC/BZ,OAAA,CAACF,aAAa;QAACW,mBAAmB,EAAEA;MAAoB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,gBAGNhB,OAAA;MAAKW,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAC9BR,WAAW,CAACa,GAAG,CAAC,CAACC,UAAU,EAAEC,CAAC,KAAK;QAChC,MAAMC,MAAM,GAAG,IAAIF,UAAU,CAACG,WAAW,CAAC,CAAC,EAAE;QAC7C,oBAAOrB,OAAA;UAAWsB,IAAI,EAAEF,MAAO;UAACT,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAEM;QAAU,GAA1DC,CAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6D,CAAC;MAClF,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR,EAEAT,iBAAiB,iBACdP,OAAA;MAAKW,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC5BR,WAAW,CAACa,GAAG,CAAC,CAACC,UAAU,EAAEC,CAAC,KAAK;QAChC,MAAMC,MAAM,GAAG,IAAIF,UAAU,CAACG,WAAW,CAAC,CAAC,EAAE;QAC7C,oBAAOrB,OAAA;UAAWsB,IAAI,EAAEF,MAAO;UAACT,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAEM;QAAU,GAAxDC,CAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA2D,CAAC;MAChF,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAAb,EAAA,CAtDYF,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}